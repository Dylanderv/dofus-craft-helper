{"version":3,"sources":["Services/RecipesService.js","Pages/Add/Add.jsx","Pages/View/Global/ViewGlobal.jsx","Pages/View/PerItems/ViewPerItems.jsx","Pages/Main.jsx","App.js","reportWebVitals.js","index.js"],"names":["FilterRecipes","nameFilter","typeFilter","levelMin","levelMax","test","Recipes","filter","x","firstNameContainsOther","recipeName","recipeType","level","name1","name2","toLocaleLowerCase","includes","allRecipesToIngredientList","recipes","ingredientList","mergedList","forEach","ingredient","elementInList","find","key","undefined","quantity","push","MergeIngredientListDuplicates","flatMap","recipe","ingredients","map","item","id","name","Add","addOneItemToCraftList","useState","items","setItems","columns","setColumns","onlyCard","setOnlyCard","search","setSearch","refItems","useRef","useEffect","newItems","current","updateItems","fieldName","isResizable","onRender","IconButton","iconProps","iconName","title","ariaLabel","onClick","minWidth","maxWidth","TextField","label","onChange","ev","value","Toggle","onText","offText","DetailsList","checked","layoutMode","DetailsListLayoutMode","justified","selectionMode","SelectionMode","none","ViewGlobal","craftList","ingredientRecipesNameToDisplayedName","recipeNames","nameOccurencies","y","occurence","join","console","log","getIngredientList","ViewPerItems","Main","setCraftList","CommandBar","_items","path","itemToAdd","craft","CustomButton","props","component","CommandBarButton","text","to","href","commandBarButtonAs","subMenuProps","initializeIcons","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fe06848a.chunk.js","sourcesContent":["import * as Recipes from '../Data/output.json';\r\n\r\nexport function GetFirstRecipe() {\r\n    return Recipes.recipes[0];\r\n}\r\n\r\nexport function FilterRecipes(nameFilter = \"\", typeFilter = \"\", levelMin = 0, levelMax = 200) {\r\n    const test = Recipes.recipes.filter(x => \r\n        firstNameContainsOther(x.recipeName, nameFilter)\r\n        && firstNameContainsOther(x.recipeType, typeFilter)\r\n        && x.level <= levelMax\r\n        && x.level >= levelMin\r\n    );\r\n    return test;\r\n}\r\n\r\nfunction firstNameContainsOther(name1, name2) {\r\n    return name1.toLocaleLowerCase().includes(name2.toLocaleLowerCase());\r\n}\r\n\r\nexport function allRecipesToIngredientList(recipes) {\r\n    const ingredientList = recipes.flatMap(recipe => {\r\n        return recipe.ingredients.map(ingredient => {\r\n            return {\r\n                key: ingredient.item.id,\r\n                name: ingredient.item.name,\r\n                level: ingredient.item.level,\r\n                quantity: ingredient.quantity,\r\n                recipes: [recipe.recipeName]\r\n            }\r\n        })\r\n    });\r\n\r\n    return MergeIngredientListDuplicates(ingredientList)\r\n}\r\n\r\nfunction MergeIngredientListDuplicates(ingredientList) {\r\n    const mergedList = [];\r\n    \r\n    ingredientList.forEach(ingredient => {\r\n        let elementInList = mergedList.find(x => x.key === ingredient.key);\r\n        if (elementInList !== undefined) {\r\n            elementInList.quantity += ingredient.quantity;\r\n            elementInList.recipes.push(...ingredient.recipes)\r\n        } else {\r\n            mergedList.push(ingredient);\r\n        }\r\n    })\r\n\r\n    return mergedList;\r\n}\r\n\r\n\r\n","import { CommandBar, CommandButton, DetailsList, DetailsListLayoutMode, IconButton, Selection, SelectionMode, TextField, Toggle } from \"@fluentui/react\"\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { FilterRecipes } from \"../../Services/RecipesService\"\r\n\r\nexport function Add({ addOneItemToCraftList }) {\r\n\r\n    const [items, setItems] = useState([]);\r\n    const [columns, setColumns] = useState([]);\r\n    const [onlyCard, setOnlyCard] = useState(false);\r\n    const [search, setSearch] = useState(\"\");\r\n    const refItems = useRef(items);\r\n\r\n    const updateItems = (newItems) => {\r\n        refItems.current = newItems;\r\n        setItems(newItems);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const newItems = FilterRecipes();\r\n        updateItems(newItems);\r\n    \r\n        const newColumns = [\r\n            { key: 'edit', name: '', fieldName: 'edit', isResizable: false,\r\n                onRender: (item) => (\r\n                    <IconButton iconProps={{iconName: \"Add\"}} title=\"Ajouter à la liste de craft\" ariaLabel=\"Ajouter à la liste de craft\"\r\n                        onClick={() => addOneItemToCraftList(item)}/>\r\n                ), minWidth: 10, maxWidth: 30\r\n            },\r\n            { key: 'column1', name: 'Nom', fieldName: 'recipeName', minWidth: 100, maxWidth: 200, isResizable: true },\r\n            { key: 'column2', name: 'Type', fieldName: 'recipeType', minWidth: 100, maxWidth: 200, isResizable: true },\r\n            { key: 'column3', name: 'Level', fieldName: 'level', minWidth: 100, maxWidth: 200, isResizable: true },\r\n          ];\r\n        setColumns(newColumns);\r\n      }, []);\r\n\r\n    const _onChangeText = (ev, value) => {\r\n        setSearch(value);\r\n        setItems(FilterRecipes(value, onlyCard ? \"Carte d'Ecaflip (Temporis)\" : \"\"));\r\n    }\r\n    \r\n    const _onChangeOnlyCard = (ev, value) => {\r\n        setOnlyCard(value);\r\n        setItems(FilterRecipes(search, value ? \"Carte d'Ecaflip (Temporis)\" : \"\"));\r\n    }\r\n\r\n    return <div>\r\n            <h2>    Add </h2>\r\n            \r\n            <TextField label=\"Filter by name:\" onChange={_onChangeText}/>\r\n\r\n            <Toggle\r\n            label=\"Filtres cartes temporis\"\r\n            onChange={_onChangeOnlyCard}\r\n            onText=\"Uniquement les cartes temporis\"\r\n            offText=\"Toutes les recettes\"\r\n          />\r\n\r\n            <DetailsList\r\n              items={items}\r\n              columns={columns}\r\n              checked={onlyCard}\r\n              layoutMode={DetailsListLayoutMode.justified}\r\n              selectionMode={SelectionMode.none}\r\n            />\r\n        \r\n        \r\n        </div>\r\n}\r\n\r\n\r\n","import { DetailsList, DetailsListLayoutMode, SelectionMode } from \"@fluentui/react\"\r\nimport { useEffect, useState } from \"react\";\r\nimport { allRecipesToIngredientList } from \"../../../Services/RecipesService\";\r\n\r\n\r\nexport function ViewGlobal({ craftList }) {\r\n    const [columns, setColumns] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const newColumns = [\r\n            { key: 'column1', name: 'Nom', fieldName: 'name', minWidth: 100, maxWidth: 200, isResizable: true },\r\n            { key: 'column2', name: 'Level', fieldName: 'level', minWidth: 100, maxWidth: 200, isResizable: true },\r\n            { key: 'column3', name: 'Quantité', fieldName: 'quantity', minWidth: 100, maxWidth: 200, isResizable: true },\r\n            { key: 'column4', name: 'Recettes', fieldName: 'recipes', minWidth: 100, maxWidth: 200, isResizable: true },\r\n          ];\r\n        setColumns(newColumns);\r\n      }, []);\r\n\r\n      const getIngredientList = () => {\r\n          let ingredientList = allRecipesToIngredientList(craftList);\r\n          console.log(ingredientList);\r\n          ingredientList.forEach(x => x.recipes = ingredientRecipesNameToDisplayedName(x.recipes))\r\n          return ingredientList;\r\n      }\r\n\r\n      const ingredientRecipesNameToDisplayedName = (recipeNames) => {\r\n            const nameOccurencies = [];\r\n            recipeNames.forEach(x => {\r\n                let elementInList = nameOccurencies.find(y => y.name === x);\r\n                if (elementInList !== undefined) {\r\n                    elementInList.occurence ++;\r\n                } else {\r\n                    nameOccurencies.push({\r\n                        name: x,\r\n                        occurence: 1\r\n                    });\r\n                }\r\n            });\r\n            return nameOccurencies.map(x => `${x.name} x${x.occurence}`).join(\", \");\r\n      }\r\n\r\n    return <div>\r\n\r\n            <h2> View Global </h2>\r\n            <DetailsList\r\n                items={getIngredientList()}\r\n                columns={columns}\r\n                layoutMode={DetailsListLayoutMode.justified}\r\n                selectionMode={SelectionMode.none}\r\n            />\r\n        \r\n        \r\n        </div>\r\n}\r\n","import { DetailsList, DetailsListLayoutMode, SelectionMode } from \"@fluentui/react\"\r\nimport { useEffect, useState } from \"react\";\r\n\r\n\r\nexport function ViewPerItems({ craftList }) {\r\n    const [columns, setColumns] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const newColumns = [\r\n            { key: 'column1', name: 'Nom', fieldName: 'name', minWidth: 100, maxWidth: 200, isResizable: true },\r\n            { key: 'column2', name: 'Level', fieldName: 'level', minWidth: 100, maxWidth: 200, isResizable: true },\r\n            { key: 'column3', name: 'Quantité', fieldName: 'quantity', minWidth: 100, maxWidth: 200, isResizable: true },\r\n          ];\r\n        setColumns(newColumns);\r\n      }, []);\r\n\r\n    const recipeToItemList = (recipe) => {\r\n        return recipe.ingredients.map(ingredient => {\r\n            return {\r\n                key: ingredient.item.id,\r\n                name: ingredient.item.name,\r\n                level: ingredient.item.level,\r\n                quantity: ingredient.quantity\r\n            }\r\n        })\r\n    }\r\n\r\n    return <div>\r\n\r\n            <h2> View per items </h2>\r\n            {craftList.map(item => \r\n                <div>\r\n                    <h3>{item.recipeName}</h3>\r\n                    <DetailsList\r\n                        items={recipeToItemList(item)}\r\n                        columns={columns}\r\n                        layoutMode={DetailsListLayoutMode.justified}\r\n                        selectionMode={SelectionMode.none}\r\n                    />\r\n                </div>\r\n                )}\r\n        \r\n        \r\n        </div>\r\n}\r\n","import {\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport { CommandBar, CommandBarButton } from '@fluentui/react';\r\nimport { Add } from './Add/Add';\r\nimport { ViewGlobal } from './View/Global/ViewGlobal';\r\nimport { ViewPerItems } from './View/PerItems/ViewPerItems';\r\nimport { useState } from 'react';\r\n\r\nexport function Main() {\r\n    const [craftList, setCraftList] = useState([])\r\n\r\n    const addOneItemToCraftList = (itemToAdd) => {\r\n        console.log(\"called\", itemToAdd);\r\n        console.log(\"current\", craftList);\r\n        const newItems = [...craftList, itemToAdd]\r\n        console.log(\"new items\", newItems);\r\n        setCraftList(craft => [...craft, itemToAdd]);\r\n        console.log(\"fin\", craftList);\r\n\r\n    }\r\n\r\n    return <div>\r\n        <CommandBar\r\n        items={_items}\r\n        ariaLabel=\"Use left and right arrow keys to navigate between commands\"\r\n      />\r\n      <div>\r\n        <Switch>\r\n          <Route path=\"/view/global\">\r\n            <ViewGlobal craftList={craftList} />\r\n          </Route>\r\n          <Route path=\"/view/perItems\">\r\n            <ViewPerItems craftList={craftList} />\r\n          </Route>\r\n          <Route path=\"/add\">\r\n            <Add addOneItemToCraftList={addOneItemToCraftList} />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n}\r\n\r\nconst CustomButton = props => {\r\n    const WrappedButton = () => (\r\n      <CommandBarButton {...(props)} text={(props.text || props.name)} />\r\n    );\r\n    return <Link component={WrappedButton} to={props.href} />;\r\n  };\r\n  \r\nconst _items = [\r\n{\r\n    key: 'craftList',\r\n    text: 'List de craft',\r\n    commandBarButtonAs: CustomButton,\r\n    subMenuProps: {\r\n    items: [\r\n        {\r\n        key: 'global',\r\n        text: 'Vue globale',\r\n        iconProps: { iconName: 'Mail' },\r\n        href: '#/view/global'\r\n        },\r\n        {\r\n        key: 'byitem',\r\n        text: 'Vue par items',\r\n        iconProps: { iconName: 'Calendar' },\r\n        href: '#/view/perItems'\r\n        },\r\n    ],\r\n    },\r\n},\r\n{\r\n    key: 'add',\r\n    text: 'Ajouter des recettes',\r\n    iconProps: { iconName: 'Upload' },\r\n    commandBarButtonAs: CustomButton,\r\n    href: '#/add'\r\n},\r\n];\r\n","import './App.css';\nimport {\n  HashRouter\n} from \"react-router-dom\";\nimport { initializeIcons } from '@fluentui/react/lib/Icons';\nimport { Main } from './Pages/Main';\n\ninitializeIcons(/* optional base url */);\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Main></Main>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}