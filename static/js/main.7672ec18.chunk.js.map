{"version":3,"sources":["Services/RecipesService.js","Pages/Add/Add.jsx","Pages/View/Global/ViewGlobal.jsx","Pages/View/PerItems/ViewPerItems.jsx","Services/LocalStorageService.js","Pages/Main.jsx","Helper/UUIDHelper.js","App.js","reportWebVitals.js","index.js"],"names":["FilterRecipes","nameFilter","typeFilter","levelMin","levelMax","Recipes","filter","x","firstNameContainsOther","name","type","level","name1","name2","toLocaleLowerCase","includes","allRecipesToIngredientList","recipes","ingredientList","mergedList","forEach","ingredient","elementInList","find","key","undefined","quantity","push","MergeIngredientListDuplicates","flatMap","recipe","ingredients","id","iconId","map","console","log","item","Add","addOneItemToCraftList","useState","items","setItems","columns","setColumns","onlyCard","setOnlyCard","search","setSearch","refItems","useRef","useEffect","newItems","current","updateItems","fieldName","isResizable","onRender","IconButton","iconProps","iconName","title","ariaLabel","onClick","minWidth","maxWidth","TextField","label","onChange","ev","value","Toggle","onText","offText","DetailsList","checked","layoutMode","DetailsListLayoutMode","justified","selectionMode","SelectionMode","none","narrowTextFieldStyles","fieldGroup","width","display","ViewGlobal","craftList","removeAllItems","Checkbox","styles","ingredientRecipesNameToDisplayedName","recipeNames","nameOccurencies","y","occurence","join","getIngredientList","ViewPerItems","removeOneItemFromList","itemList","setItemList","itemListWithMergedDuplicated","recipeToItemList","data","SaveSelectedRecipes","selectedRecipes","window","localStorage","setItem","JSON","stringify","GetSelectedRecipes","selectedItems","getItem","parse","Main","setCraftList","CommandBar","_items","PrimaryButton","text","path","itemToRemove","uuid","craft","itemToAdd","clone","replace","c","r","Math","random","toString","CustomButton","props","component","CommandBarButton","to","href","commandBarButtonAs","subMenuProps","initializeIcons","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7672ec18.chunk.js","sourcesContent":["import * as Recipes from '../Data/output.json';\r\n\r\nexport function GetFirstRecipe() {\r\n    return Recipes.recipes[0];\r\n}\r\n\r\nexport function FilterRecipes(nameFilter = \"\", typeFilter = \"\", levelMin = 0, levelMax = 200) {\r\n    return Recipes.recipes.filter(x => {\r\n        return firstNameContainsOther(x.name, nameFilter)\r\n        && firstNameContainsOther(x.type, typeFilter)\r\n        && x.level <= levelMax\r\n        && x.level >= levelMin\r\n    });\r\n}\r\n\r\nfunction firstNameContainsOther(name1, name2) {\r\n    return name1.toLocaleLowerCase().includes(name2.toLocaleLowerCase());\r\n}\r\n\r\nexport function allRecipesToIngredientList(recipes) {\r\n    const ingredientList = recipes.flatMap(recipe => {\r\n        if (recipe.ingredients === null) {\r\n            return {\r\n                key: recipe.id,\r\n                name: recipe.name,\r\n                level: recipe.level,\r\n                quantity: 1,\r\n                recipes: [recipe.name],\r\n                iconId: recipe.iconId,\r\n                type: recipe.type\r\n            }\r\n        }\r\n        return recipe.ingredients.map(ingredient => {\r\n            console.log(recipe)\r\n            return {\r\n                key: ingredient.item.id,\r\n                name: ingredient.item.name,\r\n                level: ingredient.item.level,\r\n                quantity: ingredient.quantity,\r\n                recipes: [recipe.name],\r\n                iconId: ingredient.item.iconId,\r\n                type: ingredient.item.type\r\n            }\r\n        })\r\n    });\r\n\r\n    return MergeIngredientListDuplicates(ingredientList)\r\n}\r\n\r\nfunction MergeIngredientListDuplicates(ingredientList) {\r\n    const mergedList = [];\r\n    \r\n    ingredientList.forEach(ingredient => {\r\n        let elementInList = mergedList.find(x => x.key === ingredient.key);\r\n        if (elementInList !== undefined) {\r\n            elementInList.quantity += ingredient.quantity;\r\n            elementInList.recipes.push(...ingredient.recipes)\r\n        } else {\r\n            mergedList.push(ingredient);\r\n        }\r\n    })\r\n\r\n    return mergedList;\r\n}\r\n\r\n\r\n","import { DetailsList, DetailsListLayoutMode, IconButton, SelectionMode, TextField, Toggle } from \"@fluentui/react\"\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { FilterRecipes } from \"../../Services/RecipesService\"\r\n\r\nexport function Add({ addOneItemToCraftList }) {\r\n\r\n    const [items, setItems] = useState([]);\r\n    const [columns, setColumns] = useState([]);\r\n    const [onlyCard, setOnlyCard] = useState(false);\r\n    const [search, setSearch] = useState(\"\");\r\n    const refItems = useRef(items);\r\n\r\n    const updateItems = (newItems) => {\r\n        refItems.current = newItems;\r\n        setItems(newItems);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const newItems = FilterRecipes();\r\n        updateItems(newItems);\r\n    \r\n        const newColumns = [\r\n          { key: 'edit', name: '', fieldName: 'edit', isResizable: false,\r\n            onRender: (item) => (\r\n              <IconButton iconProps={{iconName: \"Add\"}} title=\"Ajouter à la liste de craft\" ariaLabel=\"Ajouter à la liste de craft\"\r\n              onClick={() => addOneItemToCraftList(item)}/>\r\n              ), minWidth: 10, maxWidth: 30\r\n          },\r\n          { key: 'img', name: '', fieldName: 'edit', isResizable: false,\r\n              onRender: (item) => (\r\n                  // <img width=\"30\" alt=\"item icon\" src={require(`../../images/${item.relatedItem.iconId}.png`).default}/>\r\n                  <span></span>\r\n              ), minWidth: 10, maxWidth: 30\r\n          },\r\n            { key: 'column1', name: 'Nom', fieldName: 'name', minWidth: 100, maxWidth: 200, isResizable: true },\r\n            { key: 'column2', name: 'Type', fieldName: 'type', minWidth: 100, maxWidth: 200, isResizable: true },\r\n            { key: 'column3', name: 'Level', fieldName: 'level', minWidth: 100, maxWidth: 200, isResizable: true },\r\n          ];\r\n        setColumns(newColumns);\r\n      }, []);\r\n\r\n    const _onChangeText = (ev, value) => {\r\n        setSearch(value);\r\n        setItems(FilterRecipes(value, onlyCard ? \"Carte d'Ecaflip (Temporis)\" : \"\"));\r\n    }\r\n    \r\n    const _onChangeOnlyCard = (ev, value) => {\r\n        setOnlyCard(value);\r\n        setItems(FilterRecipes(search, value ? \"Carte d'Ecaflip (Temporis)\" : \"\"));\r\n    }\r\n\r\n    return <div>\r\n            <h2>    Add </h2>\r\n            \r\n            <TextField label=\"Filter by name:\" onChange={_onChangeText}/>\r\n\r\n            <Toggle\r\n            label=\"Filtres cartes temporis\"\r\n            onChange={_onChangeOnlyCard}\r\n            onText=\"Uniquement les cartes temporis\"\r\n            offText=\"Toutes les recettes\"\r\n          />\r\n\r\n            <DetailsList\r\n              items={items}\r\n              columns={columns}\r\n              checked={onlyCard}\r\n              layoutMode={DetailsListLayoutMode.justified}\r\n              selectionMode={SelectionMode.none}\r\n            />\r\n        \r\n        \r\n        </div>\r\n}\r\n\r\n\r\n","import { Checkbox, DetailsList, DetailsListLayoutMode, SelectionMode, TextField } from \"@fluentui/react\"\r\nimport { useEffect, useState } from \"react\";\r\nimport { allRecipesToIngredientList } from \"../../../Services/RecipesService\";\r\n\r\n\r\nconst narrowTextFieldStyles = { fieldGroup: { width: 60 }, display: \"inline\" };\r\n\r\nexport function ViewGlobal({ craftList, removeAllItems }) {\r\n    const [columns, setColumns] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const newColumns = [\r\n            { key: 'check', name: '', fieldName: 'edit', isResizable: false,\r\n                onRender: () => (\r\n                    <Checkbox/>\r\n                ), minWidth: 10, maxWidth: 30\r\n            },\r\n            { key: 'number', name: '', fieldName: 'edit', isResizable: true,\r\n                onRender: (item) => (\r\n                    <div><TextField styles={narrowTextFieldStyles} /> / {item.quantity}</div>\r\n                ), minWidth: 10, maxWidth: 60\r\n            },\r\n            { key: 'img', name: '', fieldName: 'edit', isResizable: false,\r\n                onRender: (item) => (\r\n                    // <img alt=\"item icon\" width=\"30\" src={require(`../../../images/${item.iconId}.png`).default}/>\r\n                    <span></span>\r\n                ), minWidth: 10, maxWidth: 30\r\n            },\r\n            { key: 'column1', name: 'Nom', fieldName: 'name', minWidth: 100, maxWidth: 200, isResizable: true },\r\n            { key: 'column2', name: 'Type', fieldName: 'type', minWidth: 100, maxWidth: 200, isResizable: true },\r\n            { key: 'column3', name: 'Quantité', fieldName: 'quantity', minWidth: 100, maxWidth: 200, isResizable: true },\r\n            { key: 'column2', name: 'Level', fieldName: 'level', minWidth: 100, maxWidth: 200, isResizable: true },\r\n            { key: 'column4', name: 'Recettes', fieldName: 'recipes', minWidth: 100, maxWidth: 200, isResizable: true },\r\n          ];\r\n        setColumns(newColumns);\r\n      }, []);\r\n\r\n      const getIngredientList = () => {\r\n          let ingredientList = allRecipesToIngredientList(craftList);\r\n          ingredientList.forEach(x => x.recipes = ingredientRecipesNameToDisplayedName(x.recipes))\r\n          return ingredientList;\r\n      }\r\n\r\n      const ingredientRecipesNameToDisplayedName = (recipeNames) => {\r\n            const nameOccurencies = [];\r\n            recipeNames.forEach(x => {\r\n                let elementInList = nameOccurencies.find(y => y.name === x);\r\n                if (elementInList !== undefined) {\r\n                    elementInList.occurence ++;\r\n                } else {\r\n                    nameOccurencies.push({\r\n                        name: x,\r\n                        occurence: 1\r\n                    });\r\n                }\r\n            });\r\n            return nameOccurencies.map(x => `${x.name} x${x.occurence}`).join(\", \");\r\n      }\r\n\r\n    return <div>\r\n\r\n            <h2> View Global </h2>\r\n            <DetailsList\r\n                items={getIngredientList()}\r\n                columns={columns}\r\n                layoutMode={DetailsListLayoutMode.justified}\r\n                selectionMode={SelectionMode.none}\r\n            />\r\n        \r\n        \r\n        </div>\r\n}\r\n","import { Checkbox, DetailsList, DetailsListLayoutMode, IconButton, PrimaryButton, SelectionMode, TextField } from \"@fluentui/react\"\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst narrowTextFieldStyles = { fieldGroup: { width: 60 }, display: \"inline\" };\r\n\r\nexport function ViewPerItems({ craftList, removeOneItemFromList, removeAllItems }) {\r\n    const [columns, setColumns] = useState([]);\r\n    const [itemList, setItemList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const newColumns = [\r\n            { key: 'check', name: '', fieldName: 'edit', isResizable: false,\r\n                onRender: () => (\r\n                    <Checkbox/>\r\n                ), minWidth: 10, maxWidth: 30\r\n            },\r\n            { key: 'number', name: '', fieldName: 'edit', isResizable: true,\r\n                onRender: (item) => (\r\n                    <div><TextField styles={narrowTextFieldStyles} /> / {item.quantity}</div>\r\n                ), minWidth: 10, maxWidth: 60\r\n            },\r\n            { key: 'img', name: '', fieldName: 'edit', isResizable: false,\r\n                onRender: (item) => (\r\n                    // <img alt=\"item icon\" width=\"30\" src={require(`../../../images/${item.iconId}.png`).default}/>\r\n                    <span></span>\r\n                ), minWidth: 10, maxWidth: 30\r\n            },\r\n            { key: 'column1', name: 'Nom', fieldName: 'name', minWidth: 100, maxWidth: 200, isResizable: true },\r\n            { key: 'column2', name: 'Level', fieldName: 'level', minWidth: 100, maxWidth: 200, isResizable: true },\r\n            { key: 'column3', name: 'Quantité', fieldName: 'quantity', minWidth: 100, maxWidth: 200, isResizable: true },\r\n          ];\r\n        setColumns(newColumns);\r\n\r\n        setItemList(itemListWithMergedDuplicated());\r\n      }, [craftList]);\r\n\r\n    const recipeToItemList = (recipe, quantity) => {\r\n        return recipe.ingredients === null ?\r\n            [] :\r\n            recipe.ingredients?.map(ingredient => {\r\n                return {\r\n                    key: ingredient.item.id,\r\n                    name: ingredient.item.name,\r\n                    level: ingredient.item.level,\r\n                    quantity: ingredient.quantity * quantity,\r\n                    iconId: ingredient.item.iconId\r\n                }\r\n            });\r\n    }\r\n\r\n    const itemListWithMergedDuplicated = () => {\r\n        let mergedList = [];\r\n        craftList.forEach(item => {\r\n            let elementInList = mergedList.find(x => x.data.id === item.id);\r\n            if (elementInList !== undefined) {\r\n                elementInList.quantity ++;\r\n            } else {\r\n                mergedList.push({\r\n                    data: item,\r\n                    quantity: 1\r\n                });\r\n            }\r\n        })\r\n        console.log(mergedList);\r\n        return mergedList;\r\n    }\r\n\r\n    return <div>\r\n\r\n            <h2> View per items </h2>\r\n            {itemList.map(item => \r\n                <div>\r\n                    <h3>\r\n                        {/* <img alt=\"item icon\" src={require(`../../../images/${item.data.relatedItem.iconId}.png`).default}/> */}\r\n                        <span></span>\r\n                        {item.data.name} {item.quantity > 1 ? `x${item.quantity}` : \"\"}\r\n                        <IconButton iconProps={{iconName: \"Delete\"}} title=\"Ajouter à la liste de craft\" ariaLabel=\"Ajouter à la liste de craft\"\r\n                            onClick={() => removeOneItemFromList(item.data)}/>\r\n                        </h3>\r\n                        {item.data.ingredients !== null ?\r\n                            <DetailsList\r\n                                items={recipeToItemList(item.data, item.quantity)}\r\n                                columns={columns}\r\n                                layoutMode={DetailsListLayoutMode.justified}\r\n                                selectionMode={SelectionMode.none}\r\n                            />\r\n                        :   <span></span>}\r\n                    \r\n                </div>\r\n                )}\r\n        \r\n        \r\n        </div>\r\n}\r\n","export function SaveSelectedRecipes(selectedRecipes) {\r\n    window.localStorage.setItem(\"recipes\", JSON.stringify(selectedRecipes));\r\n}\r\n\r\nexport function GetSelectedRecipes() {\r\n    const selectedItems = window.localStorage.getItem(\"recipes\");\r\n    return selectedItems === null ? [] : JSON.parse(selectedItems);\r\n}\r\n","import {\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport { CommandBar, CommandBarButton, PrimaryButton } from '@fluentui/react';\r\nimport { Add } from './Add/Add';\r\nimport { ViewGlobal } from './View/Global/ViewGlobal';\r\nimport { ViewPerItems } from './View/PerItems/ViewPerItems';\r\nimport { useState } from 'react';\r\nimport { uuidv4 } from \"../Helper/UUIDHelper\";\r\nimport { GetSelectedRecipes, SaveSelectedRecipes } from \"../Services/LocalStorageService\"\r\n\r\nexport function Main() {\r\n    const [craftList, setCraftList] = useState(GetSelectedRecipes())\r\n\r\n    const addOneItemToCraftList = (itemToAdd) => {\r\n        let clone = {...itemToAdd};\r\n        clone.uuid = uuidv4();\r\n        SaveSelectedRecipes([...GetSelectedRecipes(), clone]);\r\n        setCraftList(craft => [...craft, clone]);\r\n    }\r\n\r\n    const removeOneItemFromList = (itemToRemove) => {\r\n      SaveSelectedRecipes(GetSelectedRecipes().filter(x => x.uuid !== itemToRemove.uuid));\r\n      setCraftList(craft => craft.filter(x => x.uuid !== itemToRemove.uuid));\r\n    }\r\n\r\n    const removeAllItems = () => {\r\n      SaveSelectedRecipes([]);\r\n      setCraftList([]);\r\n    }\r\n\r\n    return <div>\r\n        <CommandBar\r\n        items={_items}\r\n        ariaLabel=\"Use left and right arrow keys to navigate between commands\"\r\n      />\r\n      <div>\r\n      <PrimaryButton text=\"Supprimer tous les objets de la liste\" onClick={() => removeAllItems()}/>\r\n        <Switch>\r\n          <Route path=\"/view/global\">\r\n            <ViewGlobal craftList={craftList} removeAllItems={removeAllItems} />\r\n          </Route>\r\n          <Route path=\"/view/perItems\">\r\n            <ViewPerItems craftList={craftList} removeOneItemFromList={removeOneItemFromList} removeAllItems={removeAllItems} />\r\n          </Route>\r\n          <Route path=\"/add\">\r\n            <Add addOneItemToCraftList={addOneItemToCraftList} />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n}\r\n\r\nconst CustomButton = props => {\r\n    const WrappedButton = () => (\r\n      <CommandBarButton {...(props)} text={(props.text || props.name)} />\r\n    );\r\n    return <Link component={WrappedButton} to={props.href} />;\r\n  };\r\n  \r\nconst _items = [\r\n{\r\n    key: 'craftList',\r\n    text: 'List de craft',\r\n    commandBarButtonAs: CustomButton,\r\n    subMenuProps: {\r\n    items: [\r\n        {\r\n          key: 'global',\r\n          text: 'Vue globale',\r\n          iconProps: { iconName: 'Mail' },\r\n          href: '#/view/global'\r\n        },\r\n        {\r\n          key: 'byitem',\r\n          text: 'Vue par items',\r\n          iconProps: { iconName: 'Calendar' },\r\n          href: '#/view/perItems'\r\n        }\r\n    ],\r\n    },\r\n},\r\n{\r\n    key: 'add',\r\n    text: 'Ajouter des recettes',\r\n    iconProps: { iconName: 'Upload' },\r\n    commandBarButtonAs: CustomButton,\r\n    href: '#/add'\r\n},\r\n];\r\n","export function uuidv4() {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n      var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n      return v.toString(16);\r\n    });\r\n  }","import './App.css';\nimport {\n  HashRouter\n} from \"react-router-dom\";\nimport { initializeIcons } from '@fluentui/react/lib/Icons';\nimport { Main } from './Pages/Main';\n\ninitializeIcons(/* optional base url */);\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Main></Main>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}